                  ------------------------------
                   What's new in libsixel-1.5 ?
                  ------------------------------
* img2sixel: Add -k(--insecure) option.

* img2sixel: Add -B(--bgcolor) option.

* core: Introduce new API for dither object, sixel_dither_set_transparent().

* core: Respect transparency of paletted images(GIF/PNG).

* core: Introduce API set for generic image maniplation:
    sixel_frame_get_pixels()
    sixel_frame_ref()
    sixel_frame_unref()
    sixel_frame_init()
    sixel_frame_get_pixels()
    sixel_frame_get_palette()
    sixel_frame_get_width()
    sixel_frame_get_height()
    sixel_frame_get_ncolors()
    sixel_frame_get_pixelformat()
    sixel_frame_get_transparent()
    sixel_frame_get_multiframe()
    sixel_frame_get_delay()
    sixel_frame_get_frame_no()
    sixel_frame_get_loop_no()
    sixel_frame_strip_alpha()
    sixel_frame_resize()
    sixel_frame_clip()

* core: Introduce API set for load/write well-known image formats:
    sixel_helper_load_image_file()
    sixel_helper_write_image_file()

* core: Add more high level APIs (File-to-File conversion API):
    sixel_encoder_create()
    sixel_encoder_ref()
    sixel_encoder_unref()
    sixel_encoder_set_cancel_flag()
    sixel_encoder_setopt()
    sixel_encoder_encode()
    sixel_decoder_create()
    sixel_decoder_ref()
    sixel_decoder_unref()
    sixel_decoder_setopt()
    sixel_decoder_decode()

* core: Introduce new APIs for semantic error handling:
    sixel_helper_set_additional_message()
    sixel_helper_get_additional_message()
    sixel_helper_format_error()

* core: Introduce custom allocator APIs:
    sixel_allocator_new()
    sixel_allocator_ref()
    sixel_allocator_unref()
    sixel_allocator_malloc()
    sixel_allocator_calloc()
    sixel_allocator_realloc()
    sixel_allocator_free()

* core: Add new constructor methods that returns SIXELSTATUS for semantic error handling:
    sixel_output_new()
    sixel_dither_new()
    sixel_frame_new()
    sixel_encoder_new()
    sixel_decoder_new()
    sixel_allocator_new()
    sixel_output_new()
    sixel_dither_new()
    sixel_frame_new()
    sixel_encoder_new()
    sixel_decoder_new()

* core: Improve processing quality of loading paletted PNG images.

* core: Improve processing quality and performance of loading GIF images.

* core: Update stb_image.h to version 2.06

* core: Update stb_image_write.h to version 0.94

* Add Python interface

* Add Perl interface (alpha)

* Add PHP interface (alpha)

* Add Ruby interface (alpha)

* Add new build helper program: libsixel-config

* A lot of bug fixes and minor improvements.
  Thanks to @msmhrt, @ttdoda, and @msmhrt.


                  ------------------------------
                   What's new in libsixel-1.4 ?
                  ------------------------------
* core: SIXEL encoder supports various pixel formats(thanks to @uobikiemukot).

* core: Supports high-color(15bpp output) mode(thanks to @arakiken).

* core: More high compressed output mode is introduced(thanks to @arakiken).

* core: Fix typoed API(thanks to @waywardmonkeys).

* core: Fix a minor performance bug(thanks to @arakiken).

* img2sixel: New option -D(--pipe-mode) is introduced.
             With this option, img2sixel continuously read source images from
             stdin.

* img2sixel: Introduce -I(--high-color) option, high-color(15bpp) output mode
             is added(thanks to @arakiken).

* img2sixel: New option -E(--encode-policy) is added. high-compressed
             mode(-E size) is introduced(thanks to @arakiken).

* img2sixel: New option -b(--builtin-palette) is added. built-in support of
             VT-340 palette is added(thanks to @vrtsds).

* img2sixel: Performance inprovement for loading 8bit indexed PNG.

* tests: 'make test' achieves 90% coverage.

* A lot of bug fixes and minor improvements.
  Thanks to @obache, @ttdoda, @vrtsds, and @msmhrt.


                   ------------------------------
                   What's new in libsixel-1.3 ?
                  ------------------------------

* Now libcurl is automatically linked to img2sixel.
  If you don't want to build with libcurl, you should configure with
  --without-libcurl option.

* Add libjpeg integration(linked automatically to img2sixel).

* Add libpng integration(linked automatically to img2sixel/sixel2png).

* Introduce -t(--palette-type) option.
  img2sixel can output HLS paletted sixel with "-t hls".
  Add new API sixel_output_set_palette_type.

* Introduce -v(--verbose) option.

* Add new API sixel_dither_set_body_only.

* Now img2sixel can load SIXEL as input data.

* Some bug fixes and minor improvements.
  Thanks to @obache and @arakiken.


                  ------------------------------
                   What's new in libsixel-1.2 ?
                  ------------------------------

* Introduce GNU Screen penetration (-P) feature written by @arakiken.
  This works with arakiken's GNU screen sixel branch
  (screen-sixel, https://bitbucket.org/arakiken/screen/branch/screen).

* Introduce crop operation (-c) feature written by @arakiken.
  This works with arakiken's w3m remoteimg branch
  https://bitbucket.org/arakiken/w3m/branch/remoteimg
  (w3m with "-sixel" option)

* Introduce -C (complexion score) option and implement complexion correction
  feature. (discussion with @tsutsui)

* Introduce static image extraction from Gif animation (-S).
  (discussion with @isaki68k)

* Introduce --enable-debug configure option.

* Add APIs for skipping DCS envelope
  sixel_output_{get,set}_skip_dcs_envelope. (disscussion with @uobikiemukot)

* Some bug fixes and minor improvements.
  Thanks to @elfring, @isaki68k, @knok, @mattn, @tsutsui, @waywardmonkeys
  and @ttdoda.
